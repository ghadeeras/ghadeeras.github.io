import { Flow } from "./flow.js";
export declare type PointerPosition = [number, number];
export declare type MouseButtons = [boolean, boolean, boolean];
export declare type Dragging = {
    startPos: PointerPosition;
    pos: PointerPosition;
    start: boolean;
    end: boolean;
    shift: boolean;
    ctrl: boolean;
    alt: boolean;
};
export declare function checkbox(elementId: string): Flow<boolean>;
export declare function readableValue(elementId: string): Flow<string>;
export declare function elementEvents(elementId: string): ElementEvents;
export declare class ElementEvents {
    readonly element: HTMLElement;
    readonly elementPos: PointerPosition;
    private readonly lazyClick;
    private readonly lazyMouseDown;
    private readonly lazyMouseUp;
    private readonly lazyMouseMove;
    private readonly lazyTouchStart;
    private readonly lazyTouchEnd;
    private readonly lazyTouchMove;
    private readonly lazyClickPos;
    private readonly lazyTouchStartPos;
    private readonly lazyMousePos;
    private readonly lazyTouchPos;
    private readonly lazyDragging;
    private readonly lazyMouseButtons;
    constructor(element: HTMLElement);
    parent(): ElementEvents;
    get center(): PointerPosition;
    private newClick;
    private newMouseDown;
    private newMouseUp;
    private newMouseMove;
    private newTouchStart;
    private newTouchEnd;
    private newTouchMove;
    private newClickPos;
    private newTouchStartPos;
    private newMousePos;
    private newTouchPos;
    private touchesToPositions;
    private newDragging;
    private oneTouch;
    private startDragging;
    private drag;
    private endDragging;
    private doEndDragging;
    private relativePos;
    private newMouseButtons;
    get click(): Flow<MouseEvent>;
    get mouseDown(): Flow<MouseEvent>;
    get mouseUp(): Flow<MouseEvent>;
    get mouseMove(): Flow<MouseEvent>;
    get touchStart(): Flow<TouchEvent>;
    get touchEnd(): Flow<TouchEvent>;
    get touchMove(): Flow<TouchEvent>;
    get clickPos(): Flow<PointerPosition>;
    get touchStartPos(): Flow<PointerPosition[]>;
    get mousePos(): Flow<PointerPosition>;
    get touchPos(): Flow<PointerPosition[]>;
    get dragging(): Flow<Dragging>;
    get mouseButons(): Flow<MouseButtons>;
    static create(elementId: string): ElementEvents;
}
//# sourceMappingURL=ui-input.d.ts.map