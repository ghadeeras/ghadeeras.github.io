import { Device } from "./device.js";
import { Texture } from "./texture.js";
export declare class Canvas {
    readonly device: Device;
    readonly sampleCount: number;
    readonly element: HTMLCanvasElement;
    readonly context: GPUCanvasContext;
    readonly configs: Readonly<GPUCanvasConfiguration>;
    private _size;
    private _colorTexture;
    constructor(device: Device, canvas: HTMLCanvasElement | string, sampleCount: number, configs?: Partial<GPUCanvasConfiguration>);
    get size(): GPUExtent3DDict;
    get colorTexture(): Texture | null;
    resize(): void;
    get format(): GPUTextureFormat;
    attachment(clearColor: GPUColor): GPURenderPassColorAttachment;
    depthTexture(descriptor?: Partial<GPUTextureDescriptor>): Texture;
    multiSampleState(): GPUMultisampleState | undefined;
    fragmentCount(): number;
    destroy(): void;
}
