import { Shader, ShaderType } from "./shader.js";
import { Program } from "./program.js";
import { AttributesBuffer, IndicesBuffer } from "./buffer.js";
import { Texture2D } from "./texture.js";
import { RenderBuffer, RenderBufferFormat } from "./renderbuffer.js";
import { FrameBuffer } from "./framebuffer.js";
export declare class Context {
    readonly canvas: HTMLCanvasElement;
    readonly gl: WebGL2RenderingContext;
    private constructor();
    static of(canvasElementId: string, options?: WebGLContextAttributes): Context;
    shaderFromElement(scriptId: string): Shader;
    vertexShader(code: string): Shader;
    fragmentShader(code: string): Shader;
    shader(type: ShaderType, code: string): Shader;
    linkFromElements(...scriptIds: string[]): Program;
    link(...shaders: Shader[]): Program;
    newAttributesBuffer(byteStride?: number, isDynamic?: boolean): AttributesBuffer;
    newIndicesBuffer(isDynamic?: boolean): IndicesBuffer;
    newTexture2D(unit?: number): Texture2D;
    newRenderBuffer(format: RenderBufferFormat, width: number, height: number): RenderBuffer;
    newFrameBuffer(): FrameBuffer;
}
